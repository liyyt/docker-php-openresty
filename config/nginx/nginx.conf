
pcre_jit                            on;
timer_resolution                    1s;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes                    auto;
worker_priority                     15;
worker_rlimit_core                  0;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile                32768;

events {
    # worker_connections  1024;
    accept_mutex                    off;
    accept_mutex_delay              50ms;
    multi_accept                    on;

    # When you need > 8000 * cpu_cores connections, you start optimizing
    # your OS, and this is probably the point at where you hire people
    # who are smarter than you, this is *a lot* of requests.
    worker_connections              8192;
}


http {

    ; aio                             on;
    sendfile                        on; # You usually want to serve static files with Nginx
    directio                        4m;
    
    charset                         utf-8;
    client_body_timeout             3s;
    client_header_timeout           3s;
    client_max_body_size            16m;
    default_type                    application/octet-stream;
    ignore_invalid_headers          on;

    # Create a zone for remote addresses. Can be used for login/password-reset
    # or other places people may brute force
    # http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
    limit_req_zone $binary_remote_addr zone=login:10m rate=30r/m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format upstream '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
        'rt=$request_time uct="$upstream_connect_time" '
        'uht="$upstream_header_time" urt="$upstream_response_time"';

    # access_log /dev/stdout main;
    # error_log  /dev/stderr warn;

    error_log /proc/self/fd/2 warn;
    access_log /proc/self/fd/2 main;

    include                         includes/fastcgi-microcache-path.inc;
    include                         includes/fastcgi-microcache.inc;
    include                         includes/gzip.inc;
    include                         includes/headers.inc;
    include                         includes/https.inc;
    #include                         includes/https-spdy.inc;
    #include                         includes/mime-types.inc;
    include                         mime.types;
    include                         includes/php-no-cache.inc;

    keepalive_disable               none;
    keepalive_requests              50;
    keepalive_timeout               120s;
    max_ranges                      0;
    msie_padding                    off;
    postpone_output                 1440;
    recursive_error_pages           on;
    reset_timedout_connection       on;
    send_timeout                    9s;
    server_name_in_redirect         off;
    server_names_hash_bucket_size   64;
    server_tokens                   off;
    tcp_nodelay                     off;
    tcp_nopush                      on;
    types_hash_max_size             2048;
    uninitialized_variable_warn     off;

    include /etc/nginx/conf.d/*.conf;
}
